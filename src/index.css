@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom CSS Variables and Design System */
@layer base {
	:root {
		/* Text rendering optimizations */
		overflow-wrap: break-word;
		text-size-adjust: none;
		text-rendering: optimizeLegibility;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;

		/* Gray alpha (light mode) */
		--tt-gray-light-a-50: rgba(56, 56, 56, 0.04);
		--tt-gray-light-a-100: rgba(15, 22, 36, 0.05);
		--tt-gray-light-a-200: rgba(37, 39, 45, 0.1);
		--tt-gray-light-a-300: rgba(47, 50, 55, 0.2);
		--tt-gray-light-a-400: rgba(40, 44, 51, 0.42);
		--tt-gray-light-a-500: rgba(52, 55, 60, 0.64);
		--tt-gray-light-a-600: rgba(36, 39, 46, 0.78);
		--tt-gray-light-a-700: rgba(35, 37, 42, 0.87);
		--tt-gray-light-a-800: rgba(30, 32, 36, 0.95);
		--tt-gray-light-a-900: rgba(29, 30, 32, 0.98);

		/* Gray (light mode) */
		--tt-gray-light-50: rgba(250, 250, 250, 1);
		--tt-gray-light-100: rgba(244, 244, 245, 1);
		--tt-gray-light-200: rgba(234, 234, 235, 1);
		--tt-gray-light-300: rgba(213, 214, 215, 1);
		--tt-gray-light-400: rgba(166, 167, 171, 1);
		--tt-gray-light-500: rgba(125, 127, 130, 1);
		--tt-gray-light-600: rgba(83, 86, 90, 1);
		--tt-gray-light-700: rgba(64, 65, 69, 1);
		--tt-gray-light-800: rgba(44, 45, 48, 1);
		--tt-gray-light-900: rgba(34, 35, 37, 1);

		/* Brand colors */
		--tt-brand-color-50: rgba(239, 238, 255, 1);
		--tt-brand-color-100: rgba(222, 219, 255, 1);
		--tt-brand-color-200: rgba(195, 189, 255, 1);
		--tt-brand-color-300: rgba(157, 138, 255, 1);
		--tt-brand-color-400: rgba(122, 82, 255, 1);
		--tt-brand-color-500: rgba(98, 41, 255, 1);
		--tt-brand-color-600: rgba(84, 0, 229, 1);
		--tt-brand-color-700: rgba(75, 0, 204, 1);
		--tt-brand-color-800: rgba(56, 0, 153, 1);
		--tt-brand-color-900: rgba(43, 25, 102, 1);
		--tt-brand-color-950: hsla(257, 100%, 9%, 1);

		/* Green colors */
		--tt-color-green-inc-5: hsla(129, 100%, 97%, 1);
		--tt-color-green-inc-4: hsla(129, 100%, 92%, 1);
		--tt-color-green-inc-3: hsla(131, 100%, 86%, 1);
		--tt-color-green-inc-2: hsla(133, 98%, 78%, 1);
		--tt-color-green-inc-1: hsla(137, 99%, 70%, 1);
		--tt-color-green-base: hsla(147, 99%, 50%, 1);
		--tt-color-green-dec-1: hsla(147, 97%, 41%, 1);
		--tt-color-green-dec-2: hsla(146, 98%, 32%, 1);
		--tt-color-green-dec-3: hsla(146, 100%, 24%, 1);
		--tt-color-green-dec-4: hsla(144, 100%, 16%, 1);
		--tt-color-green-dec-5: hsla(140, 100%, 9%, 1);

		/* Yellow colors */
		--tt-color-yellow-inc-5: hsla(50, 100%, 97%, 1);
		--tt-color-yellow-inc-4: hsla(50, 100%, 91%, 1);
		--tt-color-yellow-inc-3: hsla(50, 100%, 84%, 1);
		--tt-color-yellow-inc-2: hsla(50, 100%, 77%, 1);
		--tt-color-yellow-inc-1: hsla(50, 100%, 68%, 1);
		--tt-color-yellow-base: hsla(52, 100%, 50%, 1);
		--tt-color-yellow-dec-1: hsla(52, 100%, 41%, 1);
		--tt-color-yellow-dec-2: hsla(52, 100%, 32%, 1);
		--tt-color-yellow-dec-3: hsla(52, 100%, 24%, 1);
		--tt-color-yellow-dec-4: hsla(51, 100%, 16%, 1);
		--tt-color-yellow-dec-5: hsla(50, 100%, 9%, 1);

		/* Red colors */
		--tt-color-red-inc-5: hsla(11, 100%, 96%, 1);
		--tt-color-red-inc-4: hsla(11, 100%, 88%, 1);
		--tt-color-red-inc-3: hsla(10, 100%, 80%, 1);
		--tt-color-red-inc-2: hsla(9, 100%, 73%, 1);
		--tt-color-red-inc-1: hsla(7, 100%, 64%, 1);
		--tt-color-red-base: hsla(7, 100%, 54%, 1);
		--tt-color-red-dec-1: hsla(7, 100%, 41%, 1);
		--tt-color-red-dec-2: hsla(5, 100%, 32%, 1);
		--tt-color-red-dec-3: hsla(4, 100%, 24%, 1);
		--tt-color-red-dec-4: hsla(3, 100%, 16%, 1);
		--tt-color-red-dec-5: hsla(1, 100%, 9%, 1);

		/* Basic colors */
		--white: rgba(255, 255, 255, 1);
		--black: rgba(14, 14, 17, 1);
		--transparent: rgba(255, 255, 255, 0);

		/* Shadow variables */
		--tt-shadow-elevated-md: 0px 16px 48px 0px rgba(17, 24, 39, 0.04),
			0px 12px 24px 0px rgba(17, 24, 39, 0.04),
			0px 6px 8px 0px rgba(17, 24, 39, 0.02),
			0px 2px 3px 0px rgba(17, 24, 39, 0.02);

		/* Radius variables */
		--tt-radius-xxs: 0.125rem; /* 2px */
		--tt-radius-xs: 0.25rem; /* 4px */
		--tt-radius-sm: 0.375rem; /* 6px */
		--tt-radius-md: 0.5rem; /* 8px */
		--tt-radius-lg: 0.75rem; /* 12px */
		--tt-radius-xl: 1rem; /* 16px */

		/* Transition variables */
		--tt-transition-duration-short: 0.1s;
		--tt-transition-duration-default: 0.2s;
		--tt-transition-duration-long: 0.64s;
		--tt-transition-easing-default: cubic-bezier(0.46, 0.03, 0.52, 0.96);
		--tt-transition-easing-cubic: cubic-bezier(0.65, 0.05, 0.36, 1);
		--tt-transition-easing-quart: cubic-bezier(0.77, 0, 0.18, 1);
		--tt-transition-easing-circ: cubic-bezier(0.79, 0.14, 0.15, 0.86);
		--tt-transition-easing-back: cubic-bezier(0.68, -0.55, 0.27, 1.55);

		/* Contrast variables */
		--tt-accent-contrast: 8%;
		--tt-destructive-contrast: 8%;
		--tt-foreground-contrast: 8%;

		/* Global colors - Light mode */
		--tt-bg-color: var(--white);
		--tt-border-color: var(--tt-gray-light-a-200);
		--tt-border-color-tint: var(--tt-gray-light-a-100);
		--tt-sidebar-bg-color: var(--tt-gray-light-100);
		--tt-scrollbar-color: var(--tt-gray-light-a-200);
		--tt-cursor-color: var(--tt-brand-color-500);
		--tt-selection-color: rgba(157, 138, 255, 0.2);
		--tt-card-bg-color: var(--white);
		--tt-card-border-color: var(--tt-gray-light-a-100);

		/* Text colors - Light mode */
		--tt-color-text-gray: hsl(45, 2%, 46%);
		--tt-color-text-brown: hsl(19, 31%, 47%);
		--tt-color-text-orange: hsl(30, 89%, 45%);
		--tt-color-text-yellow: hsl(38, 62%, 49%);
		--tt-color-text-green: hsl(148, 32%, 39%);
		--tt-color-text-blue: hsl(202, 54%, 43%);
		--tt-color-text-purple: hsl(274, 32%, 54%);
		--tt-color-text-pink: hsl(328, 49%, 53%);
		--tt-color-text-red: hsl(2, 62%, 55%);

		--tt-color-text-gray-contrast: hsla(39, 26%, 26%, 0.15);
		--tt-color-text-brown-contrast: hsla(18, 43%, 69%, 0.35);
		--tt-color-text-orange-contrast: hsla(24, 73%, 55%, 0.27);
		--tt-color-text-yellow-contrast: hsla(44, 82%, 59%, 0.39);
		--tt-color-text-green-contrast: hsla(126, 29%, 60%, 0.27);
		--tt-color-text-blue-contrast: hsla(202, 54%, 59%, 0.27);
		--tt-color-text-purple-contrast: hsla(274, 37%, 64%, 0.27);
		--tt-color-text-pink-contrast: hsla(331, 60%, 71%, 0.27);
		--tt-color-text-red-contrast: hsla(8, 79%, 79%, 0.4);

		/* Highlight colors - Light mode */
		--tt-color-highlight-yellow: #fef9c3;
		--tt-color-highlight-green: #dcfce7;
		--tt-color-highlight-blue: #e0f2fe;
		--tt-color-highlight-purple: #f3e8ff;
		--tt-color-highlight-red: #ffe4e6;
		--tt-color-highlight-gray: rgb(248, 248, 247);
		--tt-color-highlight-brown: rgb(244, 238, 238);
		--tt-color-highlight-orange: rgb(251, 236, 221);
		--tt-color-highlight-pink: rgb(252, 241, 246);

		--tt-color-highlight-yellow-contrast: #fbe604;
		--tt-color-highlight-green-contrast: #c7fad8;
		--tt-color-highlight-blue-contrast: #ceeafd;
		--tt-color-highlight-purple-contrast: #e4ccff;
		--tt-color-highlight-red-contrast: #ffccd0;
		--tt-color-highlight-gray-contrast: rgba(84, 72, 49, 0.15);
		--tt-color-highlight-brown-contrast: rgba(210, 162, 141, 0.35);
		--tt-color-highlight-orange-contrast: rgba(224, 124, 57, 0.27);
		--tt-color-highlight-pink-contrast: rgba(225, 136, 179, 0.27);
	}

	/* Global transition for all elements */
	:root *,
	:root ::before,
	:root ::after {
		@apply box-border;
		transition: none var(--tt-transition-duration-default)
			var(--tt-transition-easing-default);
	}
}

/* Google Fonts Import for Simple Editor */
@import url("https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");

/* Simple Editor Specific Styles */
@layer base {
	body {
		--tt-toolbar-height: 44px;
		--tt-theme-text: var(--tt-gray-light-900);

		@apply font-normal p-0 overflow-hidden;
		font-family: "Inter", sans-serif;
		color: var(--tt-theme-text);
		font-optical-sizing: auto;
		font-style: normal;
	}

	html,
	body,
	#root,
	#app {
		@apply h-full;
		background-color: var(--tt-bg-color);
	}
}

@layer components {
	/* Tiptap ProseMirror Editor */
	.tiptap.ProseMirror {
		font-family: "DM Sans", sans-serif;
	}

	/* Content Wrapper with Custom Scrollbar */
	.content-wrapper {
		height: calc(100% - var(--tt-toolbar-height));
		@apply overflow-y-auto;

		/* Webkit scrollbar styles */
		&::-webkit-scrollbar {
			display: block;
			width: 0.5rem;
		}

		&::-webkit-scrollbar-track {
			background: transparent;
		}

		&::-webkit-scrollbar-thumb {
			background-color: var(--tt-scrollbar-color);
			border-radius: 4px;
		}

		/* Firefox scrollbar */
		scrollbar-width: thin;
		scrollbar-color: var(--tt-scrollbar-color) transparent;
	}

	/* Simple Editor Content Container */
	.simple-editor-content {
		@apply max-w-2xl w-full mx-auto;
	}

	.simple-editor-content .tiptap.ProseMirror {
		@apply px-12 py-12;
	}

	/* Mobile responsive styles */
	@media screen and (max-width: 480px) {
		.simple-editor-content .tiptap.ProseMirror {
			@apply px-6 py-4;
		}
	}

	/* Code Block Node Styles */
	/* Code Block Variables */
	.tiptap.ProseMirror {
		--tt-inline-code-bg-color: var(--tt-gray-light-a-100);
		--tt-inline-code-text-color: var(--tt-gray-light-a-700);
		--tt-inline-code-border-color: var(--tt-gray-light-a-200);
		--tt-codeblock-bg: var(--tt-gray-light-a-50);
		--tt-codeblock-text: var(--tt-gray-light-a-800);
		--tt-codeblock-border: var(--tt-gray-light-a-200);
	}

	/* Inline Code Styling */
	.tiptap.ProseMirror code {
		@apply text-sm leading-relaxed rounded-md border;
		background-color: var(--tt-inline-code-bg-color);
		color: var(--tt-inline-code-text-color);
		border-color: var(--tt-inline-code-border-color);
		font-family: "JetBrains Mono NL", monospace;
		font-size: 0.875em;
		line-height: 1.4;
		padding: 0.1em 0.2em;
	}

	/* Code Block Styling */
	.tiptap.ProseMirror pre {
		@apply my-6 p-4 text-base rounded-md border;
		background-color: var(--tt-codeblock-bg);
		color: var(--tt-codeblock-text);
		border-color: var(--tt-codeblock-border);
	}

	.tiptap.ProseMirror pre code {
		@apply bg-transparent border-0 rounded-none;
		-webkit-text-fill-color: inherit;
		color: inherit;
	}

	/* Image Node Styles */
	.tiptap.ProseMirror img {
		@apply max-w-full h-auto block;
	}

	/* Top-level Image Styling (excluding emoji) */
	.tiptap.ProseMirror > img:not([data-type="emoji"] img) {
		@apply my-8 rounded;
		outline: 0.125rem solid transparent;
	}

	/* Selected Image Focus Styling */
	.tiptap.ProseMirror.ProseMirror-focused
		img:not([data-type="emoji"] img).ProseMirror-selectednode {
		outline-color: var(--tt-brand-color-500);
	}

	/* Thread Image Container */
	.tiptap.ProseMirror .tiptap-thread:has(> img) {
		@apply my-8;
	}

	.tiptap.ProseMirror .tiptap-thread:has(> img) img {
		@apply rounded;
		outline: 0.125rem solid transparent;
	}

	/* Thread Image Reset Margin */
	.tiptap.ProseMirror .tiptap-thread img {
		@apply m-0;
	}
}

/* Keyframe animations */
@layer utilities {
	@keyframes fadeIn {
		from {
			opacity: 0;
		}
		to {
			opacity: 1;
		}
	}

	@keyframes fadeOut {
		from {
			opacity: 1;
		}
		to {
			opacity: 0;
		}
	}

	@keyframes zoomIn {
		from {
			transform: scale(0.95);
		}
		to {
			transform: scale(1);
		}
	}

	@keyframes zoomOut {
		from {
			transform: scale(1);
		}
		to {
			transform: scale(0.95);
		}
	}

	@keyframes zoom {
		0% {
			opacity: 0;
			transform: scale(0.95);
		}
		100% {
			opacity: 1;
			transform: scale(1);
		}
	}

	@keyframes slideFromTop {
		from {
			transform: translateY(-0.5rem);
		}
		to {
			transform: translateY(0);
		}
	}

	@keyframes slideFromRight {
		from {
			transform: translateX(0.5rem);
		}
		to {
			transform: translateX(0);
		}
	}

	@keyframes slideFromLeft {
		from {
			transform: translateX(-0.5rem);
		}
		to {
			transform: translateX(0);
		}
	}

	@keyframes slideFromBottom {
		from {
			transform: translateY(0.5rem);
		}
		to {
			transform: translateY(0);
		}
	}

	@keyframes spin {
		from {
			transform: rotate(0deg);
		}
		to {
			transform: rotate(360deg);
		}
	}
}

/* Code Block and Image Node Styles - Proper Implementation */
.tiptap.ProseMirror {
	/* CSS Variables for theming */
	--tt-inline-code-bg-color: var(--tt-gray-light-a-100);
	--tt-inline-code-text-color: var(--tt-gray-light-a-700);
	--tt-inline-code-border-color: var(--tt-gray-light-a-200);
	--tt-codeblock-bg: var(--tt-gray-light-a-50);
	--tt-codeblock-text: var(--tt-gray-light-a-800);
	--tt-codeblock-border: var(--tt-gray-light-a-200);
}

/* Inline Code Styling */
.tiptap.ProseMirror code {
	background-color: var(--tt-inline-code-bg-color) !important;
	color: var(--tt-inline-code-text-color) !important;
	border: 1px solid var(--tt-inline-code-border-color) !important;
	font-family: "JetBrains Mono NL", monospace !important;
	font-size: 0.875em !important;
	line-height: 1.4 !important;
	border-radius: 6px !important;
	padding: 0.125em 0.25em !important;
}

/* Code Block Styling */
.tiptap.ProseMirror pre {
	background-color: var(--tt-codeblock-bg) !important;
	color: var(--tt-codeblock-text) !important;
	border: 1px solid var(--tt-codeblock-border) !important;
	margin: 1.5em 0 !important;
	padding: 1em !important;
	font-size: 1rem !important;
	border-radius: 6px !important;
}

.tiptap.ProseMirror pre code {
	background-color: transparent !important;
	border: none !important;
	border-radius: 0 !important;
	color: inherit !important;
	-webkit-text-fill-color: inherit !important;
}

/* Image Node Styling */
.tiptap.ProseMirror img {
	max-width: 100% !important;
	height: auto !important;
	display: block !important;
}

.tiptap.ProseMirror > img:not([data-type="emoji"] img) {
	margin: 2rem 0 !important;
	outline: 0.125rem solid transparent !important;
	border-radius: 0.25rem !important;
}

.tiptap.ProseMirror.ProseMirror-focused
	img:not([data-type="emoji"] img).ProseMirror-selectednode {
	outline-color: var(--tt-brand-color-500) !important;
}

.tiptap.ProseMirror .tiptap-thread:has(> img) {
	margin: 2rem 0 !important;
}

.tiptap.ProseMirror .tiptap-thread:has(> img) img {
	outline: 0.125rem solid transparent !important;
	border-radius: 0.25rem !important;
}

.tiptap.ProseMirror .tiptap-thread img {
	margin: 0 !important;
}

/* Image Upload Node Styles */
@layer base {
	:root {
		--tt-button-default-icon-color: var(--tt-gray-light-a-600);
		--tiptap-image-upload-active: var(--tt-brand-color-500);
		--tiptap-image-upload-progress-bg: var(--tt-brand-color-50);
		--tiptap-image-upload-icon-bg: var(--tt-brand-color-500);
		--tiptap-image-upload-text-color: var(--tt-gray-light-a-700);
		--tiptap-image-upload-subtext-color: var(--tt-gray-light-a-400);
		--tiptap-image-upload-border: var(--tt-gray-light-a-300);
		--tiptap-image-upload-border-hover: var(--tt-gray-light-a-400);
		--tiptap-image-upload-border-active: var(--tt-brand-color-500);
		--tiptap-image-upload-icon-doc-bg: var(--tt-gray-light-a-200);
		--tiptap-image-upload-icon-doc-border: var(--tt-gray-light-300);
		--tiptap-image-upload-icon-color: var(--white);
	}
}

@layer components {
	/* Main Image Upload Container */
	.tiptap-image-upload {
		@apply my-8;
	}

	.tiptap-image-upload input[type="file"] {
		@apply hidden;
	}

	/* Dropzone Styling */
	.tiptap-image-upload-dropzone {
		@apply relative inline-flex items-start justify-center select-none;
		width: 3.125rem;
		height: 3.75rem;
	}

	.tiptap-image-upload-icon-container {
		@apply absolute bottom-0 right-0 flex items-center justify-center;
		width: 1.75rem;
		height: 1.75rem;
		background-color: var(--tiptap-image-upload-icon-bg);
		border-radius: var(--tt-radius-lg, 0.75rem);
	}

	.tiptap-image-upload-icon {
		@apply w-3.5 h-3.5;
		color: var(--tiptap-image-upload-icon-color);
	}

	.tiptap-image-upload-dropzone-rect-primary {
		@apply absolute;
		color: var(--tiptap-image-upload-icon-doc-bg);
	}

	.tiptap-image-upload-dropzone-rect-secondary {
		@apply absolute top-0 bottom-0;
		right: 0.25rem;
		color: var(--tiptap-image-upload-icon-doc-border);
	}

	/* Text Styling */
	.tiptap-image-upload-text {
		@apply text-sm font-medium leading-normal;
		color: var(--tiptap-image-upload-text-color);
	}

	.tiptap-image-upload-text em {
		@apply not-italic underline;
	}

	.tiptap-image-upload-subtext {
		@apply text-xs font-semibold leading-normal;
		color: var(--tiptap-image-upload-subtext-color);
	}

	/* Preview Styling */
	.tiptap-image-upload-preview {
		@apply relative rounded-md overflow-hidden;
	}

	.tiptap-image-upload-progress {
		@apply absolute inset-0 transition-all duration-300 ease-out;
		background-color: var(--tiptap-image-upload-progress-bg);
	}

	.tiptap-image-upload-preview-content {
		@apply relative border rounded-md p-4 flex items-center justify-between;
		border-color: var(--tiptap-image-upload-border);
	}

	.tiptap-image-upload-file-info {
		@apply flex items-center gap-3 h-8;
	}

	.tiptap-image-upload-file-icon {
		@apply p-2 rounded-xl;
		background-color: var(--tiptap-image-upload-icon-bg);
	}

	.tiptap-image-upload-file-icon svg {
		@apply w-3.5 h-3.5;
		color: var(--tiptap-image-upload-icon-color);
	}

	.tiptap-image-upload-details {
		@apply flex flex-col;
	}

	.tiptap-image-upload-actions {
		@apply flex items-center;
	}

	.tiptap-image-upload-progress-text {
		@apply text-xs;
		color: var(--tiptap-image-upload-border-active);
	}

	.tiptap-image-upload-close-btn {
		@apply flex items-center justify-center w-8 h-8 transition-colors duration-200;
		color: var(--tt-button-default-icon-color);
	}

	.tiptap-image-upload-close-btn svg {
		@apply w-4 h-4;
	}

	/* Dragger/Drop Area */
	.tiptap-image-upload-dragger {
		@apply py-8 px-6 border-2 border-dashed rounded-md text-center cursor-pointer relative overflow-hidden;
		border-color: var(--tiptap-image-upload-border);
	}

	.tiptap-image-upload-dragger-active {
		border-color: var(--tiptap-image-upload-border-active);
		background-color: rgba(
			var(--tiptap-image-upload-active-rgb, 0, 0, 255),
			0.05
		);
	}

	.tiptap-image-upload-content {
		@apply flex items-center justify-center flex-col gap-1 select-none;
	}

	/* Focus State */
	.tiptap.ProseMirror.ProseMirror-focused
		.ProseMirror-selectednode
		.tiptap-image-upload-dragger {
		border-color: var(--tiptap-image-upload-active);
	}
}

/* TailwindCSS styles for .tiptap.ProseMirror including checklist variables, list styles, and task list rendering */

.tiptap.ProseMirror {
	/* Checklist custom properties */
	--tt-checklist-bg-color: var(--tt-gray-light-a-100);
	--tt-checklist-bg-active-color: var(--tt-gray-light-a-900);
	--tt-checklist-border-color: var(--tt-gray-light-a-200);
	--tt-checklist-border-active-color: var(--tt-gray-light-a-900);
	--tt-checklist-check-icon-color: var(--white);
	--tt-checklist-text-active: var(--tt-gray-light-a-500);
}

.tiptap.ProseMirror ol,
.tiptap.ProseMirror ul {
	@apply mt-6 mb-6 pl-6;
}

.tiptap.ProseMirror ol:first-child,
.tiptap.ProseMirror ul:first-child {
	@apply mt-0;
}

.tiptap.ProseMirror ol:last-child,
.tiptap.ProseMirror ul:last-child {
	@apply mb-0;
}

.tiptap.ProseMirror ol ol,
.tiptap.ProseMirror ul ul {
	@apply mt-0 mb-0;
}

.tiptap.ProseMirror li p {
	@apply mt-0;
}

.tiptap.ProseMirror ol {
	list-style-type: decimal;
}

.tiptap.ProseMirror ol ol {
	list-style-type: lower-alpha;
}

.tiptap.ProseMirror ol ol ol {
	list-style-type: lower-roman;
}

.tiptap.ProseMirror ul:not([data-type="taskList"]) {
	list-style-type: disc;
}

.tiptap.ProseMirror ul:not([data-type="taskList"]) ul {
	list-style-type: circle;
}

.tiptap.ProseMirror ul:not([data-type="taskList"]) ul ul {
	list-style-type: disc;
}

.tiptap.ProseMirror ul[data-type="taskList"] {
	@apply pl-1;
}

.tiptap.ProseMirror ul[data-type="taskList"] li {
	@apply flex flex-row items-start;
}

.tiptap.ProseMirror ul[data-type="taskList"] li:not(:has(> p:first-child)) {
	list-style-type: none;
}

.tiptap.ProseMirror ul[data-type="taskList"] li[data-checked="true"] > div > p {
	@apply opacity-50 line-through;
}

.tiptap.ProseMirror
	ul[data-type="taskList"]
	li[data-checked="true"]
	> div
	> p
	span {
	@apply line-through;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label {
	@apply relative pt-1 pr-2;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label input[type="checkbox"] {
	@apply absolute opacity-0 w-0 h-0;
}

.tiptap.ProseMirror ul[data-type="taskList"] li label span {
	@apply block w-4 h-4 border rounded relative cursor-pointer transition-colors ease-out duration-100;
	border-color: var(--tt-checklist-border-color);
	background-color: var(--tt-checklist-bg-color);
}

.tiptap.ProseMirror ul[data-type="taskList"] li label span::before {
	content: "";
	position: absolute;
	left: 50%;
	top: 50%;
	transform: translate(-50%, -50%);
	width: 3/4em;
	height: 3/4em;
	background-color: var(--tt-checklist-check-icon-color);
	opacity: 0;
	-webkit-mask: url("data:image/svg+xml,%3Csvg...") center/contain no-repeat;
	mask: url("data:image/svg+xml,%3Csvg...") center/contain no-repeat;
}

.tiptap.ProseMirror
	ul[data-type="taskList"]
	li
	label
	input[type="checkbox"]:checked
	+ span {
	background: var(--tt-checklist-bg-active-color);
	border-color: var(--tt-checklist-border-active-color);
}

.tiptap.ProseMirror
	ul[data-type="taskList"]
	li
	label
	input[type="checkbox"]:checked
	+ span::before {
	opacity: 1;
}

.tiptap.ProseMirror ul[data-type="taskList"] li div {
	@apply flex-1 min-w-0;
}

/* TailwindCSS styles for .tiptap.ProseMirror core editor, headings, placeholder, collaboration, threads, math, emoji, and more */

.tiptap.ProseMirror {
	/* Custom Properties */
	--blockquote-bg-color: var(--tt-gray-light-900);
	--link-text-color: var(--tt-brand-color-500);
	--separator-color: var(--tt-gray-light-a-200);
	--thread-text: var(--tt-gray-light-900);
	--placeholder-color: var(--tt-gray-light-a-400);
	--tiptap-mathematics-bg-color: var(--tt-gray-light-a-200);
	--tiptap-mathematics-border-color: var(--tt-brand-color-500);

	@apply whitespace-pre-wrap outline-none;

	caret-color: var(--tt-cursor-color);

	> p.is-editor-empty::before {
		content: attr(data-placeholder);
		@apply pointer-events-none float-left h-0;
		color: var(--placeholder-color);
	}

	&.resize-cursor {
		@apply cursor-ew-resize;
		cursor: col-resize;
	}

	p:not(:first-child) {
		@apply text-base leading-relaxed font-normal mt-5;
	}

	&:not(.readonly):not(.ProseMirror-hideselection) {
		::selection {
			background-color: var(--tt-selection-color);
		}

		.selection::selection {
			@apply bg-transparent;
		}
	}

	.selection {
		@apply inline;
		background-color: var(--tt-selection-color);
	}

	.ProseMirror-hideselection {
		caret-color: transparent;
	}

	/* Gap Cursor */
	.ProseMirror-gapcursor {
		@apply hidden pointer-events-none absolute;

		&:after {
			content: "";
			@apply block absolute top-4 w-5 border-t border-black;
			animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
		}
	}

	&.ProseMirror-focused .ProseMirror-gapcursor,
	&.ProseMirror.ProseMirror-focused .ProseMirror-gapcursor {
		@apply block;
	}

	/* Text Decoration */
	a span,
	u span {
		@apply underline;
	}

	s span {
		@apply line-through;
	}

	/* Blockquote */
	blockquote {
		@apply relative pl-4 py-1.5 my-6;

		p {
			@apply mt-0;
		}

		&::before,
		&.is-empty::before {
			content: "";
			@apply absolute bottom-0 left-0 top-0 h-full w-1;
			background-color: var(--blockquote-bg-color);
			border-radius: 0;
		}
	}

	/* Collaboration */
	.collaboration-cursor__caret {
		@apply border-x border-transparent pointer-events-none -mx-px relative break-normal;
	}

	.collaboration-cursor__label {
		@apply rounded rounded-bl-none text-xs font-semibold leading-none px-1.5 absolute -top-[1.3em] -left-px select-none whitespace-nowrap;
	}

	/* Emoji */
	[data-type="emoji"] img {
		@apply inline-block w-5 h-5 cursor-text;
	}

	/* Headings */
	h1,
	h2,
	h3,
	h4 {
		@apply relative text-inherit;

		&:first-child {
			@apply mt-0;
		}
	}

	h1 {
		@apply text-[1.5em] font-bold mt-12;
	}

	h2 {
		@apply text-[1.25em] font-bold mt-10;
	}

	h3 {
		@apply text-[1.125em] font-semibold mt-8;
	}

	h4 {
		@apply text-[1em] font-semibold mt-8;
	}

	/* Horizontal Rule */
	hr {
		@apply mt-12 mb-12 border-0 h-px;
		background-color: var(--separator-color);
	}

	&.ProseMirror-focused hr.ProseMirror-selectednode {
		@apply rounded-full outline outline-[3px] outline-offset-2;
		outline-color: var(--tt-brand-color-500);
	}

	/* Links */
	a {
		color: var(--link-text-color);
		@apply underline;
	}

	/* Mention */
	[data-type="mention"] {
		@apply inline-block;
		color: var(--tt-brand-color-500);
	}

	/* Threads */
	.tiptap-thread--unresolved.tiptap-thread--inline {
		@apply transition-colors font-semibold border-b-2 border-dashed;
		color: var(--thread-text);
		border-bottom-color: var(--tt-color-yellow-base);

		&.tiptap-thread--selected,
		&.tiptap-thread--hovered {
			background-color: var(--tt-color-yellow-inc-2);
			border-bottom-color: transparent;
		}
	}

	.tiptap-thread--unresolved.tiptap-thread--block:has(img) {
		@apply outline outline-[2px] rounded overflow-hidden w-fit;

		outline-color: var(--tt-color-yellow-base);

		&.tiptap-thread--selected {
			@apply outline-[4px];
		}

		&.tiptap-thread--hovered {
			@apply outline-[4px];
		}
	}

	.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)) {
		@apply rounded border-b-2 border-dashed pb-2 outline-[4px] outline-transparent;

		border-bottom-color: var(--tt-color-yellow-base);

		&.tiptap-thread--hovered,
		&.tiptap-thread--selected {
			background-color: var(--tt-color-yellow-base);
			outline-color: var(--tt-color-yellow-base);
		}
	}

	.tiptap-thread--resolved.tiptap-thread--inline.tiptap-thread--selected {
		background-color: var(--tt-color-yellow-base);
		border-color: transparent;
		@apply opacity-50;
	}

	.tiptap-thread--block:has(.react-renderer) {
		@apply my-12;
	}

	/* Math */
	.Tiptap-mathematics-editor {
		@apply px-1 border text-sm font-mono inline-block rounded;
		border-color: var(--tiptap-mathematics-border-color);
	}

	.Tiptap-mathematics-render {
		@apply px-1 inline-block rounded;

		&--editable {
			@apply cursor-pointer transition-colors;

			&:hover {
				background: var(--tiptap-mathematics-bg-color);
			}
		}
	}
}

/* Placeholder outside ProseMirror container */
.is-empty[data-placeholder]:has(
		> .ProseMirror-trailingBreak:only-child
	)::before {
	content: "Write, type '/' for commands…";
}

.is-empty[data-placeholder]:has(
		> .ProseMirror-trailingBreak:only-child
	):before {
	@apply pointer-events-none italic absolute h-0;
}

.is-empty[data-placeholder]:has(> .ProseMirror-trailingBreak):before {
	color: var(--placeholder-color);
}

@keyframes ProseMirror-cursor-blink {
	to {
		visibility: hidden;
	}
}
